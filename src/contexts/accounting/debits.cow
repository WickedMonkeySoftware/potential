accounting :context {
	debits :aggregate {
		id :guid;
		userId :link to user->person->userId;

		// properties
		type :accounting->sources;
		amount :decimal;
		to :text;
		dateIssued :date;
		dateResolved :date;
		resolved :bool;

		// initializer
		WroteCheck :initializer (id :guid, type :accounting->sources, amount :decimal, to :text, dateIssued :date, userId :guid) {
			let ~id = id;
			let ~userId = userId;
			let ~type = type;
			let ~to = to;
			let ~dateIssued = dateIssued;
			let ~dateResolved = unknown;
			let ~resolved = false;
		}

		ScheduledPayment :initializer (id :guid, type :accounting->sources, amount :decimal, to :text, dateIssued :date, userId :guid) {
            let ~id = id;
            let ~userId = userId;
            let ~type = type;
            let ~to = to;
            let ~dateIssued = dateIssued;
            let ~dateResolved = unknown;
            let ~resolved = false;
        }
	}
}